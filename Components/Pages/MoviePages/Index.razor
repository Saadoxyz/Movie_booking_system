@page "/"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using hey.Models
@using hey.Data
@implements IAsyncDisposable
@inject IDbContextFactory<heyContext> DbFactory

<PageTitle>Movie Bookings</PageTitle>

<div class="main-container">
    <div class="header">
        <h1>🎬 Event Ticket Booking System</h1>
        <a href="/movies/create" class="gold-button">
            <i class="bi bi-plus-circle"></i> Create New Booking
        </a>
    </div>

    <div class="table-wrapper">
        <QuickGrid Class="booking-table" Items="context.Movie">
            <PropertyColumn Property="movie => movie.Name" Title="🎞️ Movie Name" />
            <PropertyColumn Property="movie => movie.Email" Title="📧 Email" />
            <PropertyColumn Property="movie => movie.NumberOfSeats" Title="🪑 Seats" />
            <PropertyColumn Property="movie => movie.BookingDate" Title="📅 Date" Format="yyyy-MM-dd" />

            <TemplateColumn Context="movie" Title="⚙️ Actions">
                <div class="actions">
                    <a href="@($"movies/edit?id={movie.Id}")" class="btn edit">✏️ Edit</a>
                    <a href="@($"movies/details?id={movie.Id}")" class="btn details">🔍 Details</a>
                    <a href="@($"movies/delete?id={movie.Id}")" class="btn delete">🗑️ Delete</a>
                </div>
            </TemplateColumn>
        </QuickGrid>
    </div>
</div>

<style>
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #fffdf4;
        margin: 0;
        padding: 0;
    }

    .main-container {
        max-width: 1200px;
        margin: 40px auto;
        padding: 32px;
        background-color: #fff8e1;
        border-radius: 20px;
        box-shadow: 0 0 20px rgba(212, 175, 55, 0.3);
        border: 2px solid #e6c200;
    }

    .header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 32px;
    }

        .header h1 {
            font-size: 32px;
            font-weight: bold;
            color: #b8860b;
        }

    .gold-button {
        background: linear-gradient(to right, #ffd700, #e6c200);
        padding: 10px 20px;
        border-radius: 12px;
        color: #4b3f00;
        font-weight: bold;
        text-decoration: none;
        transition: 0.3s;
        box-shadow: 0 4px 8px rgba(212, 175, 55, 0.3);
    }

        .gold-button:hover {
            background: linear-gradient(to right, #ffeb70, #d4af37);
            box-shadow: 0 6px 12px rgba(212, 175, 55, 0.5);
        }

    .table-wrapper {
        background-color: #fffef5;
        border: 1px solid #e6c200;
        border-radius: 16px;
        padding: 24px;
        box-shadow: 0 0 10px rgba(212, 175, 55, 0.2);
    }

    .booking-table {
        width: 100%;
        font-size: 15px;
        color: #3f3000;
    }

    .actions {
        display: flex;
        gap: 12px;
        justify-content: flex-end;
    }

    .btn {
        padding: 6px 14px;
        border-radius: 8px;
        font-size: 14px;
        font-weight: 600;
        text-decoration: none;
        transition: 0.2s ease-in-out;
        border: 1px solid transparent;
    }

        .btn.edit {
            background-color: #fff3cd;
            color: #8b7500;
            border-color: #ffeb99;
        }

            .btn.edit:hover {
                background-color: #ffeb99;
            }

        .btn.details {
            background-color: #e0f7fa;
            color: #005662;
            border-color: #b2ebf2;
        }

            .btn.details:hover {
                background-color: #b2ebf2;
            }

        .btn.delete {
            background-color: #fce4e4;
            color: #a10000;
            border-color: #ffc1c1;
        }

            .btn.delete:hover {
                background-color: #ffc1c1;
            }
</style>

@code {
    private heyContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
